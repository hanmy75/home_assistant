homeassistant:
  # Name of the location where Home Assistant is running
  name: MY's Home Assistant
  # Location required to calculate the time the sun rises and sets
  latitude:  !secret zone_home_lati
  longitude: !secret zone_home_long
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Berlin
  # Customization file
  customize: !include customize.yaml
  # Customize all entities in a domain
  whitelist_external_dirs:
    - /tmp

# Show links to resources in log and frontend
introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:
  include:
    domains:
      - binary_sensor
      - switch
      - camera
      - device_tracker
    entities:
      - sensor.room_temperature
      - sensor.room_humidity
      - sensor.watching_tv_today

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# DDNS
duckdns:
  domain: !secret duckdns_domain
  access_token: !secret duckdns_token

# Zone
zone:
  - name: Office
    latitude:  !secret zone_office_lati
    longitude: !secret zone_office_long
    icon: mdi:office

  - name: School
    latitude:  !secret zone_school_lati
    longitude: !secret zone_school_long
    icon: mdi:school

# Tracker
device_tracker:
  - platform: google_maps
    username: !secret google_id
    password: !secret google_pw

# Track the sun
sun:

# Weather prediction
weather:
  - platform: my_darksky
    name: Weather
    api_key: !secret darksky_api_key
    units: auto


# Text to speech
tts:
  - platform: google
    language: 'ko'
    cache_dir: /tmp/tts

# Camera
camera:
  - platform: my_mjpeg
    name: Room Camera
    mjpeg_url: http://localhost:8080/?action=stream
    off_image_url: http://localhost:8123/local/off_image.jpg

# Binary Sensor
binary_sensor:
  - platform: flic

  - platform: ping
    host: 192.168.0.16
    name: TV
    scan_interval: 60

  - platform: rpi_gpio
    ports:
      22: Motion

  #- platform: rpi_gpio
  #  ports:
  #    27: Dark
  #  bouncetime: 1000
  #  invert_logic: true

# Sensor
sensor:
  - platform: my_dht
    sensor: AM2302
    pin: 17
    name: Room
    monitored_conditions:
      - temperature
      - humidity

  - platform: my_darksky
    api_key: !secret darksky_api_key
    units: auto
    update_interval: 00:10:00
    monitored_conditions:
      - summary

  - platform: history_stats
    name: Watching TV today
    entity_id: binary_sensor.tv
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

# Device List
switch:
  - platform: rpi_rf
    gpio: 18
    switches:
      Window:
        code_on:  0x00EA083F
        code_off: 0x00EA083E
      Center:
        code_on:  0x00EB083C
        code_off: 0x00EB083D
      Table:
        code_on:  0x00EC083C
        code_off: 0x00EC083B

  - platform: template
    switches:
      camera:
        value_template: "{{ is_state('camera.room_camera', 'streaming') }}"
        turn_on:
          service: camera.turn_on
          data:
            entity_id: camera.room_camera
        turn_off:
          service: camera.turn_off
          data:
            entity_id: camera.room_camera

cloud:
  google_actions:
    filter:
      include_entities:
      - switch.window
      - switch.center
      - switch.table
      - switch.camera
      include_domains:
        - switch

# Flags for automation
input_boolean:
  trigger_first_morning:
    name: Waiting for first morning motion

  debounce_flag:
    name: Debounce for motion

timer:
  debounce:
    duration: '00:01:00'


group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
