
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

homeassistant:
  time_zone: Asia/Seoul

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  ssl_certificate: /etc/letsencrypt/live/hanmy75.duckdns.org/fullchain.pem
  ssl_key: /etc/letsencrypt/live/hanmy75.duckdns.org/privkey.pem

# Activate the configuration editor
config:

# Text to speech
tts:
  - platform: google_translate
    language: 'ko'
    cache: false

# DDNS
duckdns:
  domain: !secret duckdns_domain
  access_token: !secret duckdns_token

# For Google Home Assistant
google_assistant:
  project_id: my-s-home-control-cfcc7
  exposed_domains:
    - switch
    - script
    - climate
    - camera

# Shell script
#shell_command:
#  play_sbs_radio: '~/.homeassistant/play_radio.py "SBS Power FM"'
#  play_mbc_radio: '~/.homeassistant/play_radio.py "MBC FM4U"'
#  play_kbs_radio: '~/.homeassistant/play_radio.py "KBS 1FM"'

# Binary Sensor
binary_sensor:
  - platform: template
    sensors:
      on_media:
        friendly_name: "On Media"
        value_template: >-
          {{ is_state('media_player.my_tv', 'playing') and
            (is_state_attr('media_player.my_tv', 'app_name', 'YouTube') or
             is_state_attr('media_player.my_tv', 'app_name', 'V LIVE')) }}

#  - platform: mystrom

# Sensor
sensor:
  - platform: history_stats
    name: Watching Media
    entity_id: binary_sensor.on_media
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'

#  - platform: rest
#    name: 'sbs_radio'
#    resource: 'http://apis.sbs.co.kr/play-api/1.0/onair/channel/S07?v_type=2&platform=pcweb&protocol=hls&ssl=N&jwt-token=&rnd=101'
#    scan_interval: 1800
#    value_template: '{{ value_json["onair"]["source"]["mediasource"]["mediaurl"] }}'

#  - platform: command_line
#    name: music_url
#    command: "python ~/.homeassistant/get_music_url.py {{ states('input_text.music_url') }}"

input_text:
  music_url:
    name: Music URL
    icon: mdi:music

shell_command:
  enable_trans_radio:  /home/pi/trans_radio.py start

  disable_trans_radio: /home/pitrans_radio.py stop

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
